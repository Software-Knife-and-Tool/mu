(crux:eq 1 1)
(crux:eval 'crux:*standard-input*)
(crux:eval ())
(crux:fix (:lambda (l) (:if l ((:lambda () (crux:cdr l))) ())) '(1 2 3 4))
(crux:apply crux:eq '(1 2))
(crux:apply crux:sum '(1 2))
(crux:type-of #\a)
(crux:type-of '(1 2 3))
(crux:type-of 'crux:apply)
(crux:type-of ())
(crux:type-of 1)
(crux:type-of :typeof)
(crux:type-of crux:*standard-input*)
(crux:view #\a)
(crux:view '(1 2))
(crux:view 1234)
(crux:view 1.0)
(crux:view #(:t 1 2))
(crux:view #s(:foo 1 2))
(crux:view 'a)
(crux:view 'crux:eq)
(crux:view crux:*standard-input*)
(crux:unwind-protect (:lambda (cond obj) cond) (:lambda () (crux:quotient 1 1)))
