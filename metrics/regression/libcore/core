(libcore:eq 1 1)
(libcore:eval 'libcore:std-in)
(libcore:eval ())
(libcore:fix (:lambda (l) (:if l ((:lambda () (libcore:cdr l))) ())) '(1 2 3 4))
(libcore:apply libcore:eq '(1 2))
(libcore:apply libcore:fx-add '(1 2))
(libcore:type-of #\a)
(libcore:type-of '(1 2 3))
(libcore:type-of 'libcore:apply)
(libcore:type-of ())
(libcore:type-of 1)
(libcore:type-of :typeof)
(libcore:type-of libcore:std-in)
(libcore:view #\a)
(libcore:view '(1 2))
(libcore:view 1234)
(libcore:view 1.0)
(libcore:view #(:t 1 2))
(libcore:view #s(:foo 1 2))
(libcore:view 'a)
(libcore:view 'libcore:eq)
(libcore:view libcore:std-in)
(libcore:with-ex (:lambda (cond obj) cond) (:lambda () (libcore:fx-div 1 1)))
