(core:eq 1 1)
(core:eval 'core:std-in)
(core:eval ())
(core:fix (:lambda (l) (:if l ((:lambda () (core:cdr l))) ())) '(1 2 3 4))
(core:apply core:eq '(1 2))
(core:apply core:fx-add '(1 2))
(core:type-of #\a)
(core:type-of '(1 2 3))
(core:type-of 'core:apply)
(core:type-of ())
(core:type-of 1)
(core:type-of :typeof)
(core:type-of core:std-in)
(core:view #\a)
(core:view '(1 2))
(core:view 1234)
(core:view 1.0)
(core:view #(:t 1 2))
(core:view #s(:foo 1 2))
(core:view 'a)
(core:view 'core:eq)
(core:view core:std-in)
(core:with-ex (:lambda (cond obj) cond) (:lambda () (core:fx-div 1 1)))
