(:lambda ())
(:lambda () 1)
(:lambda () (crux:eq () ()))
(:lambda (a))
(:lambda (a) (crux:eq () ()))
(:lambda (a) 1)
(:lambda (a) a)
(:lambda (a) a a)
(:lambda (a) (crux:eq a a))
(:lambda (a b))
(:lambda (a b) 1)
(:lambda (a b) a)
(:lambda (a b) a b)
(:lambda (a b) (crux:eq a b))
(:if () () ())
(crux:apply crux:eq '(1 2))
(crux:apply (:lambda ()) ())
(crux:apply (:lambda () 1) ())
(crux:apply (:lambda (a)) '(1))
(crux:apply (:lambda (a) 1) '(1))
(crux:apply (:lambda (a) a) '(1))
(crux:apply (:lambda (a) a a) '(1))
(crux:apply (:lambda (a b)) '(1 2))
(crux:apply (:lambda (a b) 1) '(1 2))
(crux:apply (:lambda (a b) a) '(1 2))
(crux:apply (:lambda (a b) a b) '(1 2))
(crux:apply (:lambda () (crux:eq () ())) ())
(crux:apply (:lambda (a) (crux:eq () ())) '(1))
(crux:apply (:lambda (a) (crux:eq a a)) '(1))
(crux:apply (:lambda (a b) (crux:eq a b)) '(1 2))
(crux:eval ())
(crux:eval 1)
(crux:eval 'crux:*version*)
(crux:intern (crux:find-ns "") "a" ())
(crux:fix (:lambda (a) ()) ())
(crux:fix (:lambda (a) (:if (crux:eq 0 a) 0 (crux:difference a 1))) 100)
(crux:type-of ())
(crux:type-of 1)
(crux:eq () ())
(crux:eq 1 1)
