(lib:eq 1 1)
(lib:eval 'lib:standard-input)
(lib:eval ())
(lib:fix (:lambda (l) (:if l ((:lambda () (lib:cdr l))) ())) '(1 2 3 4))
(lib:apply lib:eq '(1 2))
(lib:apply lib:sum '(1 2))
(lib:type-of #\a)
(lib:type-of '(1 2 3))
(lib:type-of 'lib:apply)
(lib:type-of ())
(lib:type-of 1)
(lib:type-of :typeof)
(lib:type-of lib:standard-input)
(lib:view #\a)
(lib:view '(1 2))
(lib:view 1234)
(lib:view 1.0)
(lib:view #(:t 1 2))
(lib:view #s(:foo 1 2))
(lib:view 'a)
(lib:view 'lib:eq)
(lib:view lib:standard-input)
(lib:unwind-protect (:lambda (cond obj) cond) (:lambda () (lib:quotient 1 1)))
