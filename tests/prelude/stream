(core:type-of prelude:close)	:func
(core:type-of prelude:get-output-stream-string)	:func
(core:type-of prelude:make-string-stream)	:func
(core:type-of prelude:open)	:func
(core:type-of prelude:with-open-stream)	:func
(core:type-of prelude:read)	:func
(core:type-of prelude:read-byte)	:func
(core:type-of prelude:read-char)	:func
(core:type-of prelude:unread-char)	:func
(core:type-of prelude:write)	:func
(core:type-of prelude:write-byte)	:func
(core:write 1 () core:standard-output)	11
(core:write (core:sum 1 2) () core:standard-output)	33
(core:write (prelude:string= "" "") () core:standard-output)	:t:t
(core:write (prelude:string= "" "1") () core:standard-output)	:nil:nil
(core:write (prelude:string= "1" "1") () core:standard-output)	:t:t
(core:write (prelude:string= "123" "1") () core:standard-output)	:nil:nil
(core:write (prelude:string= "" "ci") () core:standard-output)	:nil:nil
(core:write (prelude:string= "ci" "") () core:standard-output)	:nil:nil
(core:write (prelude:with-open-stream :string :input "foo" (:lambda (stream) (prelude:read-char stream () ()))) () core:standard-output)	f#\f
