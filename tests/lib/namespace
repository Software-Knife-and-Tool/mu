(lib:boundp (lib:intern (lib:find-ns "") "foo" ()))	foo
(lib:eq :func (lib:type-of lib:make-ns))	:t
(lib:find (lib:find-ns "lib") "eq")	lib:eq
(lib:find (lib:find-ns "lib") "foo")	:nil
(lib:intern (lib:find-ns "") "foo" "foo")	foo
(lib:intern (lib:find-ns "lib") "foo" ())	lib:foo
(lib:make-ns "mu")	#<:ns "mu">
(lib:type-of (lib:symbols (lib:find-ns "")))	:null
(lib:type-of (lib:symbols (lib:find-ns "keyword")))	:null
(lib:type-of (lib:symbols (lib:find-ns "lib")))	:cons
(lib:type-of (lib:unintern (lib:intern (lib:find-ns "") "foo" ())))	:symbol
