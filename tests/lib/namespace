(lib:eq :func (lib:type-of lib:make-ns))	:t
(lib:boundp (lib:intern () "foo" ()))	foo
(lib:intern () "foo" "foo")	foo
(lib:untern :lib "foo")	lib:foo
(lib:boundp (lib:untern :lib "foo"))	:nil
(lib:make-ns :mu)	:mu
(lib:ns-find :lib "eq")	lib:eq
(lib:ns-find :lib "foo")	:nil
(lib:type-of (lib:ns-syms :list :lib))	:cons
(lib:type-of (lib:ns-syms :vector :lib))	:vector
(lib:type-of (lib:ns-syms :list :nil))	:null
(lib:type-of (lib:ns-syms :vector :nil))	:vector
(lib:type-of (lib:ns-syms :list ()))	:null
(lib:type-of (lib:ns-syms :vector ()))	:vector
