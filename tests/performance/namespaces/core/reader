(mu:symbol-name (core:read (mu:open :string :input "a" :t) () ()))
(mu:symbol-name (core:read (mu:open :string :input "core:a" :t) () ()))
(core:read (mu:open :string :input "abcdefgh" :t) () ())
(core:read (mu:open :string :input "core:abcdefgh" :t) () ())
(core:read (mu:open :string :input "'abcdefgh" :t) () ())
(core:read (mu:open :string :input "'core:abcdefgh" :t) () ())
(core:read (mu:open :string :input "1024" :t) () ())
(core:read (mu:open :string :input "-1024" :t) () ())
(core:read (mu:open :string :input "1.024" :t) () ())
(core:read (mu:open :string :input "#b10101100" :t) () ())
(core:read (mu:open :string :input "#d1024" :t) () ())
(core:read (mu:open :string :input "#xabcdef" :t) () ())
(core:read (mu:open :string :input "(())" :t) () ())
(core:read (mu:open :string :input "(a b)" :t) () ())
(core:read (mu:open :string :input "(:a :b)" :t) () ())
(core:read (mu:open :string :input "(:abc ())" :t) () ())
(core:read (mu:open :string :input "(1 . 2)" :t) () ())
(core:read (mu:open :string :input "(1 2 . 3)" :t) () ())
(core:read (mu:open :string :input "((1 2) . 3)" :t) () ())
(core:read (mu:open :string :input "((1 2) . (3 4q))" :t) () ())
