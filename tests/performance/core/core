(mu:eval (core:compile '(core:append)))
(mu:eval (core:compile '(core:append '(1 2 3) 4)))
(mu:eval (core:compile '(core:append '(1 2 3) '(4))))
(mu:eval (core:compile '(core:list)))
(mu:eval (core:compile '(core:list 1)))
(mu:eval (core:compile '(core:list 1 2 3)))
(mu:eval (core:compile '(core:list*)))
(mu:eval (core:compile '(core:list* 1)))
(mu:eval (core:compile '(core:list* 1 2 3)))
(mu:eval (core:compile '(core:let ())))
(mu:eval (core:compile '(core:let () 1)))
(mu:eval (core:compile '(core:let () 1 2)))
(mu:eval (core:compile '(core:let ((a 0)) a)))
(mu:eval (core:compile '(core:let ((a 1) (b 2)) (mu:add a b))))
(mu:eval (core:compile '(core:let* ())))
(mu:eval (core:compile '(core:let* () 1)))
(mu:eval (core:compile '(core:let* () 1 2)))
(mu:eval (core:compile '(core:let* ((a 0)) a)))
(mu:eval (core:compile '(core:let* ((a 1) (b 2)) (mu:add a b))))
(mu:eval (core:compile '(progn)))
(mu:eval (core:compile '(progn 1)))
(mu:eval (core:compile '(progn 1 2)))
(mu:eval (core:compile '(when :t ())))
(mu:eval (core:compile '(when :t 1)))
(mu:eval (core:compile '(when :t 1 2)))
(mu:eval (core:compile '(when () ())))
(mu:eval (core:compile '(when () 1)))
(mu:eval (core:compile '(when () 1 2)))
(mu:eval (core:compile '(unless :t ())))
(mu:eval (core:compile '(unless :t 1)))
(mu:eval (core:compile '(unless :t 1 2)))
(mu:eval (core:compile '(unless () ())))
(mu:eval (core:compile '(unless () 1)))
(mu:eval (core:compile '(unless () 1 2)))
(mu:eval (core:compile '(and)))
(mu:eval (core:compile '(and 1)))
(mu:eval (core:compile '(and 1 2)))
(mu:eval (core:compile '(or)))
(mu:eval (core:compile '(or 1)))
(mu:eval (core:compile '(or 1 2)))
(mu:eval (core:compile '(cond)))
(mu:eval (core:compile '(cond (1 'a))))
(mu:eval (core:compile '(cond (() 'a) (1 'b 'c))))
