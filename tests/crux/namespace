(crux:boundp (crux:intern (crux:find-ns "") "foo" ()))	foo
(crux:eq :func (crux:type-of crux:make-ns))	:t
(crux:find (crux:find-ns "crux") "eq")	crux:eq
(crux:find (crux:find-ns "crux") "foo")	:nil
(crux:intern (crux:find-ns "") "foo" "foo")	foo
(crux:intern (crux:find-ns "crux") "foo" ())	crux:foo
(crux:make-ns "mu")	#<:ns "mu">
(crux:type-of (crux:symbols (crux:find-ns "")))	:null
(crux:type-of (crux:symbols (crux:find-ns "keyword")))	:null
(crux:type-of (crux:symbols (crux:find-ns "crux")))	:cons
(crux:type-of (crux:unintern (crux:intern (crux:find-ns "") "foo" ())))	:symbol
