(libcore:eq :func (libcore:type-of libcore:make-ns))	:t
(libcore:boundp (libcore:intern () "foo" ()))	foo
(libcore:intern () "foo" "foo")	foo
(libcore:untern :libcore "foo")	libcore:foo
(libcore:boundp (libcore:untern :core "foo"))	:nil
(libcore:make-ns :mu)	:mu
(libcore:ns-find :libcore "eq")	libcore:eq
(libcore:ns-find :libcore "foo")	:nil
(libcore:type-of (libcore:ns-syms :list :libcore))	:cons
(libcore:type-of (libcore:ns-syms :vector :libcore))	:vector
(libcore:type-of (libcore:ns-syms :list :nil))	:null
(libcore:type-of (libcore:ns-syms :vector :nil))	:vector
(libcore:type-of (libcore:ns-syms :list ()))	:null
(libcore:type-of (libcore:ns-syms :vector ()))	:vector
